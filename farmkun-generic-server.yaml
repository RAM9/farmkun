variant: fcos
version: 1.5.0
passwd:
  users:
    - name: core
      password_hash: $1$82024$51fV6RLyDo3oFsfkc3H7S/
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFBQm/e9Ej4PuQuo/M2IV0/IxGAOE83oMnBCwBn2WAaP
        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDGyraMnjnSZiPrRZKkRixfA9qatS8EA5AD1mhRP7bRp8d2ix98lp2NvJ43hC4aEmH/PWIfPPAMVPR0URMydS65xJHvQwl/Z6ULJuYxp6Lwlfec3KfrPOy4QmKUc+hfJC3gu5U7HW6iU7s91gPGz4IO1p/XPmi0GLfWBAbqLhcvteIykQ4zlFHdjdHy07gc3IICoSvQhOgBjhAMwtkr0tWJeXIbdk70f/bOha4tr1GM493IBrtoFkK95Na7HnAw8Jj7TAIh8LqB8FWwU8zkXl0wUHN3jz5Vg6IWdINfY7OSNwmnSjWH5FHPYS85uSrodLiAIusAe2ulFtO61wTGjqVylgspVXLklF7Kpyoyf5AtoxlVMPFN0uiZqhuJ3JaBn0e0gbQvGwPQKo2ZV+dmssIvatKg3MDDURJfT/k0gIViomyzD/Ol8RIy6uCTqHV4fa5MvgCGj3Yy7oN3vNhqdbqxsfHBh3E/x+rXnNHSn27OUhVSBLe3INgPnKghnTSRyHNu7b5jwCqzWan0DY7TkGzv/JL2onFpQWFKoziQ89h5yWcOD8OOMmWJZ5r4rp3qGBkyB8e3CNxDNRobhDVU8ZG7AKz5avLAgL43pNbnYzDrTDtP/Q9EVKrLKFK0pkaNtKmRx8Dr1oXlpODWBoOHgqnV92y0au7SVzN05/RFUcyp6Q==
      groups:
        - wheel
        - sudo
systemd:
  units:
    - name: install-rancher2-tar.service
      enabled: true
      contents: |
        [Unit]
        Description=Install Rancher2 Via Tar
        Wants=network-online.target
        After=network-online.target
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/bin/bash -c ' INSTALL_RKE2_METHOD=tar sh /etc/rancher/install.sh'
        ExecStart=/bin/touch /var/lib/%N.stamp

        [Install]
        WantedBy=multi-user.target
    # Installing vim as a layered package with rpm-ostree
    - name: farm.ram9.cc.service
      enabled: true
      contents: |
        [Unit]
        Description=Run Rancher Kubernetes according to machine role
        Wants=network-online.target
        After=install-rancher2-tar.service
        Before=zincati.service
        [Service]
        ExecStart=/bin/bash /etc/rancher/post-install.bash
        [Install]
        WantedBy=multi-user.target
    - name: rpm-ostree-install-packages.service
      enabled: true
      contents: |
        [Unit]
        Description=Layer vim with rpm-ostree
        Wants=network-online.target
        After=install-rancher2-tar.service
        # We run before `zincati.service` to avoid conflicting rpm-ostree
        # transactions.
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/rpm-ostree install -y --allow-inactive vim tmux emacs zsh NetworkManager-wifi  iwlwifi-dvm-firmware iwlwifi-mvm-firmware
        ExecStart=/bin/touch /var/lib/%N.stamp
        ExecStart=/bin/systemctl --no-block reboot

        [Install]
        WantedBy=multi-user.target
storage:
  disks:
  - # The link to the block device the OS was booted from.
    device: /dev/disk/by-id/coreos-boot-disk
    # We do not want to wipe the partition table since this is the primary
    # device.
    wipe_table: false
    partitions:
    - number: 4
      label: root
      # Allocate at least 8 GiB to the rootfs. See NOTE above about this.
      # /etc is writable in root
      size_mib: 16384
      resize: true
    - size_mib: 0 # use rest
      # Check if existing partition matches the specified one,
      # delete existing partition and create specified partition
      # if it does not match.
      wipe_partition_entry: true
      # We assign a descriptive label to the partition. This is important
      # for referring to it in a device-agnostic way in other parts of the
      # configuration.
      label: var
  filesystems:
    - path: /var
      # /var is writable
      device: /dev/disk/by-partlabel/var
      wipe_filesystem: true # change to false
      #wipe_filesystem: false
      # We can select the filesystem we'd like.
      format: ext4
      # Ask Butane to generate a mount unit for us so that this filesystem
      # gets mounted in the real root.
      with_mount_unit: true
  files:
    - path: /etc/rancher/post-install.bash
      overwrite: true
      contents:
        inline: |
          #!/bin/env bash
          # ease of use
          /bin/ln -s /var/lib/rancher/rke2/bin/kubectl /usr/local/bin/kubectl
          # ease of use
          /bin/mkdir -p /root/.kube
          /bin/ln -s /etc/rancher/rke2/rke2.yaml /root/.kube/config

          # clear prior configuration
          rm -rf /etc/rancher/node
          rm -rf /etc/rancher/rke2
          /bin/mkdir -p /etc/rancher/rke2

          # if cluster is already running it will respond with cacerts
          # and this isn't the first machine
          /bin/curl -fk https://farmkun.ram9.cc:9345/cacerts
          if [ $? == 0 ]; then
            # n+1 machines
            /bin/echo ">>>> Found Running Farmkun <<<<"
            /bin/curl -k https://config.private/config.yaml -o /etc/rancher/rke2/config.yaml
            # INSTALL CONFIG
            /bin/chmod 600 /etc/rancher/rke2/config.yaml
          else
            # base condition - first machine
            /bin/echo ">>>> No Running Farmkun found : This one will become first node  <<<<"
            /bin/curl -k https://config.private/first_config.yaml -o /etc/rancher/rke2/config.yaml
            # INSTALL CONFIG
            /bin/chmod 600 /etc/rancher/rke2/config.yaml
          fi
          /bin/echo ">>>>I am farmbot - setting rke2-server"
          /bin/systemctl enable rke2-server.service
          /bin/systemctl start --no-block --now rke2-server.service
      mode: 0744

    - path: /etc/rancher/install.sh
      overwrite: true
      contents:
      #  source: https://get.rke2.io
        local: install.sh


    # Set vim as default editor
    # We use `zz-` as prefix to make sure this is processed last in order to
    # override any previously set defaults.
    - path: /etc/profile.d/zzz-default-editor.sh
      overwrite: true
      contents:
        inline: |
          export EDITOR=vim

